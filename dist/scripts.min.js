let pokemonRepository = (function() {
  let t = [],
    e = 'https://pokeapi.co/api/v2/pokemon/?limit=150';
  function n(t) {
    return t[0].toUpperCase() + t.substring(1);
  }
  function o(e) {
    'object' == typeof e ? t.push(e) : document.write('pokemon is not correct');
  }
  function i(t) {
    let e = $('.modal-body'),
      n = $('.modal-title');
    $('.modal-header');
    n.empty(), e.empty();
    let o = $('<h1>' + t.name + '<h1>'),
      i = $('<img class="modal-img" style="width:50%">');
    i.attr('src', t.imageUrl);
    let s = $('<p>Height : ' + t.height + '</p>'),
      l = $('<p>Weight : ' + t.weight + '</p>'),
      a = $('<p>Types : ' + t.types + '</p>');
    n.append(o), e.append(i), e.append(s), e.append(l), e.append(a);
  }
  function s(t) {
    let e = t.detailsUrl;
    return fetch(e)
      .then(function(t) {
        return t.json();
      })
      .then(function(e) {
        (t.imageUrl = e.sprites.front_default),
          (t.height = e.height),
          (t.weight = e.weight),
          (t.types = e.types),
          (t.types = []),
          e.types.forEach(function(e) {
            t.types.push(n(e.type.name));
          });
        let o = t.types.join(', ');
        t.types = o;
      })
      .catch(function(t) {
        console.log(t);
      });
  }
  function l(t) {
    s(t).then(function() {
      console.log(t), i(t);
    });
  }
  return {
    add: o,
    getAll: function() {
      return t;
    },
    addListItem: function(t) {
      let e = document.querySelector('.pokemon-list'),
        n = document.createElement('li');
      n.classList.add('list-group-item');
      let o = document.createElement('button');
      (o.innerText = t.name),
        o.classList.add('btn'),
        o.classList.add('btn-primary'),
        o.classList.add('btn-block'),
        o.classList.add('button-class'),
        o.setAttribute('data-target', '#exampleModal'),
        o.setAttribute('data-toggle', 'modal'),
        n.appendChild(o),
        e.appendChild(n),
        o.addEventListener('click', function(e) {
          l(t);
        });
    },
    loadList: function() {
      return fetch(e)
        .then(function(t) {
          return t.json();
        })
        .then(function(t) {
          t.results.forEach(function(t) {
            let e = { name: n(t.name), detailsUrl: t.url };
            o(e), console.log(e);
          });
        })
        .catch(function(t) {
          console.error(t);
        });
    },
    loadDetails: s,
    showDetails: l,
    showModal: i
  };
})();
pokemonRepository.getAll(),
  pokemonRepository.loadList().then(function() {
    pokemonRepository.getAll().forEach(function(t) {
      pokemonRepository.addListItem(t);
    });
  });
